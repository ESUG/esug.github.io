! Slot Composition in Pharo 8

Marcus Denker (marcus.denker@inria.fr)

""Abstract:""
Pharo models instance variables with objects: they are reified, first class concepts.
Slots can be subclassed to implement new kinds of instance variables, changing how they are read or written.

The current image contains many examples for slots: Weak Slot holds weakly onto objects, InitializedSlot is initialized with a default value,
SpecObservableSlot wraps transparently in a ValueHolder.

The problem with sub-classing is that we have to implement a new subclass for every new kind of slot. For example, if you wanted to an ObservableSlot
with a default value, you would need to implement InitializedObservableSlot, a weak observable slot would need a WeakSpecObservableSlot class.
This leads to a combinatorial explosion and is not practical.

This talk presents a first exploration of Slot composition that allows the programmer to define slot behavior that is composable.

""Bio:""
Marcus Denker is a permanent researcher (CR1, with tenure) at INRIA Lille - Nord Europe. Before, he was a postdoc at the PLEIAD lab/DCC University of Chile and the Software Composition Group, University of Bern. His research focuses on reflection and meta-programming for dynamic languages. He is an active participant in the Squeak and Pharo open source communities for many years. Marcus Denker received a PhD in Computer Science from the University of Bern/Switzerland in 2008 and a Dipl.-Inform. (MSc) from the University of Karlsruhe/Germany in 2004. He co-founded 2Denker GmbH in 2009. He is a member of ACM, GI and a board-member of ESUG.
